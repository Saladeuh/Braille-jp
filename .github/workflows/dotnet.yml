name: Release to GitHub
on:
  push:
    tags:
      - 'v*'  # Déclenchement sur les tags versionnés (ex: v1.0.0)
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      MGFXC_WINE_PATH: /home/runner/.winemonogame
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Get version from tag
      run: |
        TAGVERSION=$(git describe --tags --abbrev=0)
        echo "TAGVERSION=${TAGVERSION:1}" >> $GITHUB_ENV
        
        # Create SemVer compliant version for Velopack (ensure it has 3 parts)
        SEMVER_VERSION=${TAGVERSION:1}
        # Count the number of dots in the version
        DOT_COUNT=$(echo $SEMVER_VERSION | tr -cd '.' | wc -c)
        
        # If only has one dot (2 parts like 0.8), add .0 for the patch version
        if [ $DOT_COUNT -eq 1 ]; then
          SEMVER_VERSION="${SEMVER_VERSION}.0"
        # If no dots, add .0.0
        elif [ $DOT_COUNT -eq 0 ]; then
          SEMVER_VERSION="${SEMVER_VERSION}.0.0"
        fi
        
        echo "SEMVER_VERSION=${SEMVER_VERSION}" >> $GITHUB_ENV
    - name: Setup Wine
      run: |
        sudo apt update
        sudo apt install wine64 p7zip-full curl
        wget -qO- https://raw.githubusercontent.com/MonoGame/MonoGame/78636f8056fa981584e3a2a3e0f22e2efbc43ef8/Tools/MonoGame.Effect.Compiler/mgfxc_wine_setup.sh | sh
    - name: Build Windows
      run: dotnet publish BrailleJP/BrailleJP.csproj -r win-x64 -c Release --self-contained --output artifacts/windows
    - name: Build macOS
      run: dotnet publish BrailleJP/BrailleJP.csproj -r osx-x64 -c Release --self-contained --output artifacts/macos
    - name: Build Linux
      run: dotnet publish BrailleJP/BrailleJP.csproj -r linux-x64 -c Release --self-contained --output artifacts/linux
    - name: Package Standard Builds
      run: |
        cd artifacts
        zip -r BrailleJP-Windows-${{ env.TAGVERSION }}.zip windows
        zip -r BrailleJP-macOS-${{ env.TAGVERSION }}.zip macos
        zip -r BrailleJP-Linux-${{ env.TAGVERSION }}.zip linux
    
    # Add Velopack packaging for all platforms
    - name: Create Velopack Release for Windows
      run: |
        dotnet tool install -g vpk
        vpk download github --repoUrl https://github.com/${{ github.repository }}
        vpk pack -u BrailleJP.Windows -v ${{ env.SEMVER_VERSION }} -p artifacts/windows
        # Move Velopack files to artifacts directory for uploading
        mkdir -p artifacts/velopack/windows
        cp -r ./releases/* artifacts/velopack/windows/
        
    - name: Create Velopack Release for macOS
      run: |
        vpk pack -u BrailleJP.macOS -v ${{ env.SEMVER_VERSION }} -p artifacts/macos
        # Move Velopack files to artifacts directory for uploading
        mkdir -p artifacts/velopack/macos
        cp -r ./releases/* artifacts/velopack/macos/
        
    - name: Create Velopack Release for Linux
      run: |
        vpk pack -u BrailleJP.Linux -v ${{ env.SEMVER_VERSION }} -p artifacts/linux
        # Move Velopack files to artifacts directory for uploading
        mkdir -p artifacts/velopack/linux
        cp -r ./releases/* artifacts/velopack/linux/
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/BrailleJP-Windows-${{ env.TAGVERSION }}.zip
          artifacts/BrailleJP-macOS-${{ env.TAGVERSION }}.zip
          artifacts/BrailleJP-Linux-${{ env.TAGVERSION }}.zip
          artifacts/velopack/windows/*
          artifacts/velopack/macos/*
          artifacts/velopack/linux/*
        name: BrailleJP Release ${{ env.TAGVERSION }}
        tag_name: v${{ env.TAGVERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true